version: '3.9'

volumes:
  postgres_data:
  seq_data:
  pubnet_packages:
  caddy_data:
  caddy_config:

services:
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: "pubnet"
      POSTGRES_PASSWORD: "pubnet"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - "8080:8080"

  seq:
    image: datalust/seq
    restart: always
    environment:
      ACCEPT_EULA: "Y"
    volumes:
      - "seq_data:/data"
    ports:
      - "5380:80"
      - "5341:5341"

  backend:
    build:
      dockerfile: ./PubNet.API/Dockerfile
      target: final
    restart: always
    volumes:
      - "./backend-appsettings.json:/app/appsettings.Production.json"
      - "pubnet_packages:/app/packages"
    depends_on:
      - database
      - caddy

  worker:
    build:
      dockerfile: ./PubNet.Worker/Dockerfile
      target: final
    restart: always
    volumes:
      - "./worker-appsettings.json:/app/appsettings.Production.json"
      - "pubnet_packages:/app/packages"
    depends_on:
      - database

  frontend:
    build:
      dockerfile: ./PubNet.Frontend/Dockerfile
    restart: always
    depends_on:
      - backend
      - caddy

  # you can choose any reverse proxy you want, Caddy is not required
  caddy:
    image: caddy
    restart: always
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile"
      - "caddy_data:/data"
      - "caddy_config:/config"
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
