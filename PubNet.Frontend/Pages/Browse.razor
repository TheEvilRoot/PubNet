@page "/browse"
@using PubNet.API.DTO
@inject ApiClient Http

<PageTitle>Browse Packages</PageTitle>

@if (_packages == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <ol>
        <li>
            Add <code>publish_to: @PublishToUrl</code> to your <code>pubspec.yaml</code>
        </li>
        <li>Run <code>dart pub publish</code></li>
    </ol>

    <hr>

    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Author</th>
            <th>Latest Version</th>
            <th>Published At</th>
        </tr>
        </thead>
        <tbody>
        @if (!_packages.Packages.Any())
        {
            <tr>
                <td colspan="4" style="text-align: center">
                    <strong>No packages found.</strong>
                </td>
            </tr>
        }
        else
        {
            @foreach (var package in _packages.Packages.OrderByDescending(p => p.Latest!.PublishedAtUtc))
            {
                <tr>
                    <td>
                        <NavLink href="@("/package/" + package.Name)">@package.Name</NavLink>
                    </td>
                    <td>
                        <NavLink href="@("/author/" + package.Author?.UserName)">@package.Author?.UserName</NavLink>
                    </td>
                    <td>@package.Latest?.Version</td>
                    <td>@package.Latest?.PublishedAtUtc.ToLocalTime()</td>
                </tr>
            }
        }
        </tbody>
    </table>
}

@code {
    private PackagesResponse? _packages;

    private string PublishToUrl => Http.BaseAddress ?? "";

    protected override async Task OnParametersSetAsync()
    {
        _packages = await Http.GetAsync<PackagesResponse>("packages");
    }
}