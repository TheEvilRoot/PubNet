@page "/browse"
@page "/browse/packages"
@using PubNet.API.DTO
@inject ApiClient Http

<PageTitle>Packages</PageTitle>

@if (_packages == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Author</th>
            <th>Latest Version</th>
            <th>Published At</th>
        </tr>
        </thead>
        <tbody>
        @if (!_packages.Packages.Any())
        {
            <tr>
                <td colspan="4" style="text-align: center">
                    <strong>No packages found.</strong>
                </td>
            </tr>
        }
        else
        {
            @foreach (var package in _packages.Packages.OrderByDescending(p => p.LatestPublishedAtUtc))
            {
                <tr>
                    <td>
                        <NavLink href="@("/package/" + package.Name)">@package.Name</NavLink>
                    </td>
                    <td>
                        @if (package.AuthorUserName is not null)
                                             {
                                                 <NavLink href="@("/author/" + package.AuthorUserName)">@package.AuthorUserName</NavLink>
                                             }
                                             else
                                             {
                                                 <span class="text-muted">&lt;deleted&gt;</span>
                                             }
                    </td>
                    <td>@package.LatestVersion</td>
                    <td>@package.LatestPublishedAtUtc.ToLocalTime()</td>
                </tr>
            }
        }
        </tbody>
    </table>
}

@code {
    private SearchPackagesResponse? _packages;

    protected override async Task OnParametersSetAsync()
    {
        _packages = await Http.GetAsync<SearchPackagesResponse>("packages");
    }
}