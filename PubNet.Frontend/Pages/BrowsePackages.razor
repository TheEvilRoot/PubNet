@page "/browse"
@page "/browse/packages"
@using PubNet.API.DTO
@inject ApiClient Http

<PageTitle>Packages</PageTitle>

@if (_packages == null)
{
	<Paragraph>
		<em>Loading...</em>
	</Paragraph>
}
else
{
	<Table>
		<TableHeader>
			<TableRow>
				<TableHeaderCell>Name</TableHeaderCell>
				<TableHeaderCell>Author</TableHeaderCell>
				<TableHeaderCell>Latest Version</TableHeaderCell>
				<TableHeaderCell>Published</TableHeaderCell>
			</TableRow>
		</TableHeader>
		<TableBody>
		@if (!_packages.Packages.Any())
		{
			<TableRow>
				<TableRowCell colspan="4" TextAlignment="TextAlignment.Center">
					<strong>No packages found.</strong>
				</TableRowCell>
			</TableRow>
		}
		else
		{
			<Repeater Items="_packages.Packages.OrderByDescending(p => p.LatestPublishedAtUtc)">
				<TableRow>
					<TableRowCell>
						<NavLink href="@("/packages/" + context.Name)">@context.Name</NavLink>
					</TableRowCell>
					<TableRowCell>
						<AuthorLink Username="@context.AuthorUserName"/>
					</TableRowCell>
					@if (context is not {LatestVersion: null, LatestPublishedAtUtc: null})
					{
						<TableRowCell>@context.LatestVersion</TableRowCell>
						<TableRowCell>
							<Abbreviation Title="@context.LatestPublishedAtUtc.ToString()">@(context.LatestPublishedAtUtc.Humanize())</Abbreviation>
						</TableRowCell>
					}
					else
					{
						<TableRowCell colspan="2" TextAlignment="TextAlignment.Center" TextColor="TextColor.Muted">
							<em>No latest version available</em>
						</TableRowCell>
					}
				</TableRow>
			</Repeater>
		}
		</TableBody>
	</Table>
}

@code {
	private SearchPackagesResponse? _packages;

	protected override async Task OnParametersSetAsync()
	{
		_packages = await Http.GetAsync<SearchPackagesResponse>("packages");
	}

}
